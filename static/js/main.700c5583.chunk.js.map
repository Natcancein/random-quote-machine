{"version":3,"sources":["components/Footer.js","components/CardContentQuote.js","components/CardActionsQuote.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","CardContentQuote","props","CardContent_default","Typography_default","gutterBottom","variant","component","id","style","index_es","quote","align","author","CardActionsQuote","CardActions_default","Button_default","size","color","concat","title","target","rel","Icon_default","onClick","btn","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","fetch","then","response","json","data","number","Math","floor","random","quotes","length","quotesData","cleanQuote","cleanAuthor","setState","catch","error","console","log","state","appStyle","backgroundColor","appStyleText","changeColor","bind","assertThisInitialized","randomColor","parseInt","toString","newStyle","objectSpread","newStyleText","_this2","Grid_default","container","direction","justify","alignItems","minHeight","Card_default","CardActionArea_default","components_CardContentQuote","components_CardActionsQuote","components_Footer","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.700c5583.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => (\n    <div className=\"footer\"> <a href=\"https://github.com/Natcancein\">Created by Natcancein</a>\n    </div>\n);\n\nexport default Footer;","import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Icon } from \"@material-ui/core\";\n\nconst CardContentQuote = (props) => (\n  <CardContent>\n    <Typography gutterBottom variant=\"h5\" component=\"h2\" id=\"text\" style={props.style}>\n      <Icon>format_quote</Icon> \n       {props.quote}\n      <Icon>format_quote</Icon>\n    </Typography>\n    <Typography component=\"p\" id=\"author\" align=\"right\">\n    {props.author}\n    </Typography>\n  </CardContent>\n);\n\nexport default CardContentQuote;\n","import React from 'react';\n\nimport Icon from '@material-ui/core/Icon';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CardActionsQuote = (props) => (\n    <CardActions className=\"btns\">\n    <Button size=\"small\" variant=\"outlined\" color=\"primary\">\n      <a\n        href={`https://twitter.com/intent/tweet?text=${props.quote}--${props.author}`}\n        id=\"tweet-quote\"\n        title=\"Tweet this quote!\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n         <Icon color=\"primary\">\n        send\n      </Icon>\n\n      </a>\n    </Button>\n    <Button size=\"small\" variant=\"outlined\" color=\"primary\"\n      id=\"new-quote\"\n      onClick={props.btn}>\n      New quote\n    </Button>\n  </CardActions>\n);\n\nexport default CardActionsQuote;","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport Footer from \"./components/Footer.js\";\nimport CardContentQuote from \"./components/CardContentQuote\";\nimport CardActionsQuote from \"./components/CardActionsQuote\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appStyle: {\n        backgroundColor: \"salmon\",\n      },\n      appStyleText: {\n        color:\"salmon\"\n      },\n\n      quote: \"Offend nobody, design for somebody.\",\n      author: \"PAUL BOAG\"\n    };\n\n    this.changeColor = this.changeColor.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleClick();\n  }\n\n  handleClick = event => {\n    //event.preventDefault(); // May or may not be necessary depending on what you are doing\n    const endpoint = `https://gist.githubusercontent.com/christianvuerings/6624542/raw/379a1943f1881b3d3d4ca3e3f456df4d4608c9e7/quotes.json`;\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        // Do stuff with data and then call this.setState();\n     let number = (Math.floor(Math.random() * data.quotes.length));\n      const quotesData = data.quotes[number];\n      const cleanQuote = quotesData.quote;\n      const cleanAuthor = quotesData.author;\n      this.setState({ quote: cleanQuote, author: cleanAuthor });\n      })\n      .catch(error => console.log(\"error is\", error));\n  };\n\n  changeColor() {\n    const randomColor= parseInt(Math.random() * 0xffffff).toString(16);\n\n    let newStyle = {\n      ...this.state.appStyle,\n      backgroundColor: \"#\" + randomColor\n    };\n\n    let newStyleText = {\n      ...this.state.appStyle,\n      color: \"#\" + randomColor,\n      backgroundColor:\"white\"\n    };\n\n    this.setState({ appStyle: newStyle, appStyleText: newStyleText});\n    console.log(newStyle);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={this.state.appStyle}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ minHeight: \"100vh\" }}>\n          {\" \"}\n          <div id=\"quote-box\">\n            <Card>\n              <CardActionArea >\n                <CardContentQuote style={this.state.appStyleText}\n                  quote={this.state.quote}\n                  author={this.state.author}\n                />\n                <CardActionsQuote\n                   quote={this.state.quote}\n                   author={this.state.author}\n                  btn={() => {\n                    this.changeColor();\n                    this.handleClick();\n                  }}\n                />\n              </CardActionArea>\n            </Card>\n          </div>\n          \n          <Footer />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}